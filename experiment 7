#include<iostream>

class Complex {
    private:
        double real;
        double imag;

    public:
        Complex(double r = 0.0, double i = 0.0) : real(r), imag(i) {}

        friend Complex operator+(const Complex& c1, const Complex& c2);
        friend std::ostream& operator<<(std::ostream& os, const Complex& c);
};

// Overload the + operator as a friend function
Complex operator+(const Complex& c1, const Complex& c2) {
    return Complex(c1.real + c2.real, c1.imag + c2.imag);
}

// Overload the << operator as a friend function
std::ostream& operator<<(std::ostream& os, const Complex& c) {
    os << c.real << " + " << c.imag << "i";
    return os;
}

int main() {
    Complex c1(3.0, 2.0);
    Complex c2(1.0, 4.0);
    Complex c3 = c1 + c2;

    std::cout << "c1 = " << c1 << std::endl;
    std::cout << "c2 = " << c2 << std::endl;
    std::cout << "c3 = c1 + c2 = " << c3 << std::endl;

    return 0;
}
